{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","TodoForm/index.js","CreateTodoButton/index.js","Modal/index.js","EmptyTodos/index.js","TodosLoading/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","children","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","e","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","push","TodoCounter","useContext","total","className","TodoSearch","placeholder","onChange","event","console","log","target","TodoList","props","TodoItem","onClick","onComplete","onDelete","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","CreateTodoButton","Modal","reactDom","createPortal","document","getElementById","EmptyTodos","TodosLoading","AppUI","Fragment","map","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.bf8be0cd.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { useLocalStorage } from './useLocalStorage';\r\n\r\n// Al crear el contexto también podemos pasarle un valor inicial entre los paréntesis\r\nconst TodoContext = React.createContext();\r\n\r\nconst TodoProvider = ({children}) => {\r\n// Nos traemos todo el estado y las funciones de nuestra aplicación que queremos globales\r\n  const {\r\n    error,\r\n    loading,\r\n    item: todos,\r\n    saveItem: saveTodos,\r\n  } = useLocalStorage(\"TODOS_V1\", []);\r\n  const [searchValue, setSearchValue] = React.useState('');\r\n  const [openModal, setOpenModal] = useState(false)\r\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\r\n  const totalTodos = todos.length;\r\n\r\n  let searchedTodos = [];\r\n\r\n  if (!searchValue.length >= 1) {\r\n    searchedTodos = todos;\r\n  } else {\r\n    searchedTodos = todos.filter(todo => {\r\n      const todoText = todo.text.toLowerCase();\r\n      const searchText = searchValue.toLowerCase();\r\n      return todoText.includes(searchText);\r\n    });\r\n  }\r\n\r\n  const addTodo = (text) => {\r\n\r\n    const newTodos = [...todos];\r\n    newTodos.push({\r\n        completed:false,\r\n        text,\r\n    });\r\n    saveTodos(newTodos);\r\n  };\r\n\r\n  const completeTodo = (text) => {\r\n    const todoIndex = todos.findIndex(todo => todo.text === text);\r\n    const newTodos = [...todos];\r\n    newTodos[todoIndex].completed = true;\r\n    saveTodos(newTodos);\r\n  };\r\n\r\n  const deleteTodo = (text) => {\r\n    const todoIndex = todos.findIndex(todo => todo.text === text);\r\n    const newTodos = [...todos];\r\n    newTodos.splice(todoIndex, 1);\r\n    saveTodos(newTodos);\r\n  };\r\n    \r\n  // Retornamos nuestro proveedor con nuestro contexto en la etiqueta value, que recibirá a toda nuestra aplicación, por eso necesitamos la prop children\r\n  return (\r\n    <TodoContext.Provider value={{\r\n        loading,\r\n        error,\r\n        totalTodos,\r\n        completedTodos,\r\n        searchValue,\r\n        setSearchValue,\r\n        searchedTodos,\r\n        completeTodo,\r\n        deleteTodo,\r\n        openModal,\r\n        setOpenModal,\r\n        addTodo\r\n    }}>\r\n        {children}\r\n    </TodoContext.Provider>\r\n  )\r\n}\r\n// Exportamos nuestro proveedor y nuestro contexto, en el context también esta el consumer, para acceder a nuestro contexto\r\nexport {TodoContext, TodoProvider};","import React, {useEffect} from \"react\";\r\n\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const [error, setError] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n    // Guardamos nuestros TODOs del localStorage en nuestro estado\r\n    const [item, setItem] = React.useState(initialValue);\r\n  \r\n    useEffect(() => {\r\n      setTimeout(()=> {\r\n      try {\r\n  \r\n          const localStorageItem = localStorage.getItem(itemName);\r\n    \r\n      let parsedItem; //le envio todo lo que este en esta variable para que el user pueda visualizarla cuando entre\r\n    \r\n      if(!localStorageItem) {\r\n        // Si el usuario es nuevo no existe un item en localStorage, por lo tanto guardamos uno con un array vacío\r\n        localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n        parsedItem= initialValue;\r\n    \r\n      } else { \r\n        // Si existen TODOs en el localStorage los regresamos como nuestros todos \r\n        parsedItem = JSON.parse(localStorageItem);\r\n      }\r\n    \r\n        setItem(parsedItem)\r\n        setLoading(false);\r\n        \r\n        } catch(error) {\r\n          setError(error);\r\n        }\r\n      }, 1000)\r\n    }, []);\r\n  \r\n  \r\n  \r\n    const saveItem = (newItem) => {\r\n      try {\r\n        const stringifiedItem = JSON.stringify(newItem);\r\n        localStorage.setItem(itemName, stringifiedItem);\r\n        setItem(newItem);\r\n  \r\n      } catch(e) {\r\n        setError(e)\r\n      }\r\n    };\r\n  \r\n    return{\r\n      error,\r\n      loading,\r\n      item,\r\n      saveItem\r\n    }\r\n  };\r\n\r\n  export { useLocalStorage }","import React, {useContext} from 'react';\nimport './TodoCounter.css';\nimport { TodoContext } from '../TodoContext';\n\n\nfunction TodoCounter() {\n  const { totalTodos: total , completedTodos:completed } = useContext(TodoContext)\n  return (\n    <h2 className=\"TodoCounter\">Has completado {completed} de {total} TODOs</h2>\n  );\n}\n\nexport { TodoCounter };\n","import React, {useContext} from 'react';\nimport './TodoSearch.css';\nimport { TodoContext } from '../TodoContext';\n\nfunction TodoSearch() {\n  const {searchValue, setSearchValue } = useContext(TodoContext)\n\n  const onSearchValueChange = (event) => {\n    console.log(event.target.value);\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <input\n      className=\"TodoSearch\"\n      placeholder=\"Cebolla\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n  );\n}\n\nexport { TodoSearch };\n","import React from 'react';\nimport './TodoList.css'\n\nfunction TodoList(props) {\n  return (\n    <section>\n      <ul>\n        {props.children}\n      </ul>\n    </section>\n  );\n}\n\nexport { TodoList };\n","import React from 'react';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {\n  return (\n    <li className=\"TodoItem\">\n      <span\n        className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n        onClick={props.onComplete}\n      >\n        √\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <span\n        className=\"Icon Icon-delete\"\n        onClick={props.onDelete}\n      >\n        X\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React, {useContext, useState} from 'react'\r\nimport { TodoContext } from '../TodoContext';\r\nimport './todoForm.css'\r\n\r\n\r\nconst TodoForm = () => { \r\n  const [newTodoValue, setNewTodoValue] = useState('')\r\n  const { addTodo, setOpenModal }  = useContext(TodoContext)\r\n\r\n  const handleChange = (e) => {\r\n    setNewTodoValue(e.target.value)\r\n  }\r\n  \r\n  const onCancel = () => {\r\n    setOpenModal(false)\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addTodo(newTodoValue)\r\n    setOpenModal(false)\r\n    // También estaría bien resetear nuestro formulario\r\n    setNewTodoValue('')\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <label>Escribe tu nuevo TODO</label>\r\n        <textarea \r\n            placeholder=\"Cortar la cebolla para el almuerzo\"\r\n            value={newTodoValue}\r\n            onChange={handleChange}\r\n        />\r\n        <div className='TodoForm-buttonContainer'>\r\n          <button type=\"button\" onClick={onCancel} className='TodoForm-button TodoForm-button--cancel'>\r\n            Cancelar\r\n          </button>\r\n          <button type=\"submit\" className=\"TodoForm-button TodoForm-button--add\">Añadir</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoForm;","import React from 'react';\nimport './CreateTodoButton.css';\n\nfunction CreateTodoButton({setOpenModal, openModal}) {\n  const onClickButton = () => {\n    setOpenModal(!openModal)\n  };\n  \n  return (\n    <button\n      className=\"CreateTodoButton\"\n      onClick={onClickButton}\n    >\n      +\n    </button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport './modal.css'\r\n\r\nconst Modal = ({ children}) => {\r\n    return reactDom.createPortal(\r\n      <div className=\"ModalBackground\">\r\n        <div className=\"ModalContainer\">\r\n        {children}\r\n        </div>\r\n      </div> ,\r\n    document.getElementById('modal')\r\n  )\r\n}\r\n\r\nexport default Modal;","import React from 'react'\r\n\r\nconst EmptyTodos = () => {\r\n  return (\r\n    <div><p>Crea tu primer TODO</p></div>\r\n  )\r\n}\r\n\r\nexport default EmptyTodos;","import React from 'react'\r\n\r\nconst TodosLoading = () => {\r\n  return (\r\n    <div>\r\n        <p>Estamos cargando, espera...</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodosLoading;","import React, {useContext} from 'react';\nimport { TodoContext } from '../TodoContext';\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { TodoItem } from '../TodoItem';\nimport TodoForm from '../TodoForm';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport Modal from '../Modal';\nimport EmptyTodos from '../EmptyTodos';\nimport TodosLoading from '../TodosLoading';\n\n\nfunction AppUI() {\n  // Desesctructuramos los valores de nuestro contexto\n  const { \n    error, \n    loading, \n    searchedTodos, \n    completeTodo, \n    deleteTodo,\n    openModal,\n    setOpenModal \n  } = useContext(TodoContext);\n\n  return (\n    <React.Fragment>\n      <TodoCounter />\n      <TodoSearch />\n          <TodoList>\n            {error && <p>Hubo un error, espera...</p>}\n            {loading && <TodosLoading/>}\n            {!loading && !searchedTodos.length && \n            <EmptyTodos/>}\n            {searchedTodos.map((todo) => (\n              <TodoItem\n                key={todo.text}\n                text={todo.text}\n                completed={todo.completed}\n                onComplete={() => completeTodo(todo.text)}\n                onDelete={() => deleteTodo(todo.text)}\n              />\n            ))}\n          </TodoList>\n      {!!openModal && (\n        <Modal>\n          <CreateTodoButton setOpenModal={setOpenModal} openModal={openModal}/>\n        <TodoForm/>\n     </Modal>\n      )}\n        <CreateTodoButton setOpenModal={setOpenModal} openModal={openModal}/>\n    </React.Fragment>\n  );\n}\n\nexport { AppUI };\n","import React, {useEffect} from 'react';\nimport { AppUI } from './AppUI';\nimport { TodoProvider } from '../TodoContext';\n\n\n// const defaultTodos = [\n//   { text: 'Cortar cebolla', completed: true },\n//   { text: 'Tomar el cursso de intro a React', completed: false },\n//   { text: 'Llorar con la llorona', completed: true },\n//   { text: 'LALALALAA', completed: false },\n// ];\n\n\nfunction App() {\n  \n  \n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport reactDom from 'react-dom';\nimport ReactDOM from 'react-dom';\nimport App from './App/index.js';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}